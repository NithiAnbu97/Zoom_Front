{"version":3,"sources":["components/zoomIcon.jpg","SocketContext.js","components/Video.js","components/Options.js","components/Notifications.js","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","Video","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","varient","gutterBottom","playsInline","muted","ref","autoPlay","root","display","minWidth","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","Button","variant","color","startIcon","Assignment","fontSize","PhoneDisabled","onClick","Phone","Notifications","style","wrapper","alignItems","App","src","icon","height","alt","fontWeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21660225.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zoomIcon.cecd0999.jpg\";","import React, { createContext, useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io(\"https://zoom-clone-back.herokuapp.com/\");\r\n\r\nconst ContextProvider = ({ children }) => {\r\n\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState(\"\");\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    //to get the permission for the audio and video and to stream\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n                myVideo.current.srcObject = currentStream;\r\n            })\r\n\r\n        socket.on(\"me\", (id) => {\r\n            setMe(id);\r\n        })\r\n\r\n        socket.on(\"calluser\", ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivedCall: true, from, name: callerName, signal })\r\n        })\r\n    }, []);\r\n\r\n    //streaming\r\n    const answerCall = () => {\r\n        setCallAccepted(true)\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on(\"signal\", (data) => {\r\n            socket.emit(\"answerCall\", { signal: data, to: call.from });\r\n        });\r\n\r\n        peer.on(\"stream\", (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    //for streaming \r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n        peer.on(\"signal\", (data) => {\r\n            socket.emit(\"calluser\", { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on(\"stream\", (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on(\"callaccepted\", (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    //to disconnect the call\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call, callAccepted, callEnded,  me, myVideo, userVideo, stream, name, setName, callUser, leaveCall, answerCall\r\n        }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\nexport {ContextProvider,SocketContext};","import React, { useContext } from \"react\";\r\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\n//stylesheet\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n        width: \"400px\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"300px\",\r\n        },\r\n    },\r\n    gridContainer: {\r\n        justifyContent: \"center\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            flexDirection: \"column\",\r\n        },\r\n    },\r\n    paper: {\r\n        padding: \"2px\",\r\n        border: \"1px solid black\",\r\n        margin: \"10px\",\r\n    },\r\n}))\r\n\r\n//video player\r\nconst Video = () => {\r\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Grid container className={classes.gridContainer}>\r\n            {/*our video*/}\r\n            {\r\n                stream && (\r\n                    <Paper className={classes.paper}>\r\n                        <Grid item xs={10} md={6}>\r\n                            <Typography varient=\"h3\" gutterBottom>{name}</Typography>\r\n                            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n                        </Grid>\r\n                    </Paper>\r\n                )\r\n            }\r\n            {/*user video*/}\r\n            {\r\n                callAccepted && !callEnded && (\r\n                    <Paper className={classes.paper}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography varient=\"h3\" gutterBottom>{call.name}</Typography>\r\n                            <video playsInline ref={userVideo} autoPlay className={classes.video} />\r\n                        </Grid>\r\n                    </Paper>\r\n                )\r\n            }\r\n\r\n\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Video;","import React, { useContext, useState } from \"react\";\r\nimport { Button, TextField, Grid, Typography, Container, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\";\r\n\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\n//stylesheet\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    gridContainer: {\r\n        minWidth: \"200px\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            flexDirection: \"column\",\r\n        },\r\n    },\r\n    container: {\r\n        width: \"50%\",\r\n        margin: \"35px 0\",\r\n        padding: 0,\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"80%\",\r\n        },\r\n    },\r\n    margin: {\r\n        marginTop: 20,\r\n    },\r\n    padding: {\r\n        padding: 20,\r\n    },\r\n    paper: {\r\n        padding: \"5px 10px\",\r\n        border: \"1px solid black\",\r\n    },\r\n}))\r\n\r\n//option component to display the name,id\r\nconst Options = ({ children }) => {\r\n    const { me, callAccepted, name, setName, callEnded, callUser, leaveCall } = useContext(SocketContext);\r\n\r\n    const [idToCall, setIdToCall] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Grid container className={classes.gridContainer}>\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom varient=\"h6\">Account</Typography>\r\n                            <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth > </TextField>\r\n                            <CopyToClipboard text={me} className={classes.margin}>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>Copy Your ID\r\n                                </Button>\r\n                            </CopyToClipboard>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom varient=\"h6\">Make a Call</Typography>\r\n                            <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth></TextField>\r\n                            {callAccepted && !callEnded ? (\r\n                                <Button variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    startIcon={<PhoneDisabled fontSize=\"large\" />}\r\n                                    fullWidth\r\n                                    onClick={leaveCall}\r\n                                    className={classes.margin}\r\n                                >Hang Up</Button>\r\n                            ) : (\r\n                                <Button variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<Phone fontSize=\"large\" />}\r\n                                    fullWidth\r\n                                    onClick={() => callUser(idToCall)}\r\n                                    className={classes.margin}\r\n                                >Call</Button>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                {children}\r\n            </Paper>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Options;","import React, { useContext } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\n//notification component to display the caller detail\r\nconst Notifications = () => {\r\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n    return (\r\n        <>\r\n            {call.isReceivedCall && !callAccepted && (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <h1>{call.name} is calling: </h1>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                        Answer\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from \"react\";\n// import { Typography, AppBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport icon from \"./components/zoomIcon.jpg\"\n\nimport Video from \"./components/Video\";\nimport Options from \"./components/Options\";\nimport Notifications from \"./components/Notifications\";\n\n//stylesheet\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n\n}));\n\nconst App = () => {\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <div>\n        <img src={icon} style={{ height: \"100px\", width: \"100px\" }} alt=\"zoom-icon\" />\n        <h1 style={{ fontSize: \"large\", color: \"#4C95FC\", fontWeight: \"100\", padding: \"20px 20px\" }}><b>VIDEO CHAT APP</b></h1>\n      </div>\n      <div className={classes.wrapper}>\n        <Video />\n        <Options>\n          <Notifications />\n        </Options>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./App.css\";\nimport { ContextProvider} from \"./SocketContext\";\n\nReactDOM.render(\n  <ContextProvider>\n     <App />\n  </ContextProvider>\n   ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}